resources:
  Dbp\Relay\BlobBundle\Entity\FileData:
    types: ['https://schema.org/DigitalDocument']
    shortName: "BlobFiles"
    routePrefix: "/blob"
    normalizationContext:
      groups: ["BlobFiles:output"]
      jsonld_embed_context: true
    denormalizationContext:
      groups: ["BlobFiles:input"]

    operations:

      ApiPlatform\Metadata\GetCollection:
        security: 'is_granted("IS_AUTHENTICATED_FULLY")'
        provider: Dbp\Relay\BlobBundle\State\FileDataProvider
        uriTemplate: "/files"
        normalizationContext:
          groups: ["BlobFiles:output"]
          jsonld_embed_context: true
        openapiContext:
          tags: ["Blob"]
          summary: "Get the fileshares of a specific bucket with a specific prefix"
          parameters:
            - name: bucketIdentifier
              in: query
              description: 'Config dentifier of bucket'
              type: string
              required: true
              example: "test-bucket"
            - name: creationTime
              in: query
              description: 'Current time in ATOM'
              type: string
              required: true
              example: "2024-09-25T12:51:01+00:00"
            - name: method
              in: query
              description: 'Method that gets executed'
              type: string
              required: true
              example: "GET"
            - name: includeData
              in: query
              description: 'If the returned contentUrl is a http link or the base64 encoded data'
              type: string
              required: false
              example: "1"
            - name: prefix
              in: query
              description: 'Prefix of a file collection'
              type: string
              required: true
              example: "my-prefix/my-subprefix"
            - name: sig
              in: query
              description: 'Signature containing the checksum required for the check'
              type: string
              required: true
              example: ""
            - name: page
              in: query
              description: 'Page of data that should be accessed'
              type: string
              required: false
              example: "1"
            - name: perPage
              in: query
              description: 'Number of items per page'
              type: string
              required: false
              example: "30"

      ApiPlatform\Metadata\Get:
        security: 'is_granted("IS_AUTHENTICATED_FULLY")'
        provider: Dbp\Relay\BlobBundle\State\FileDataProvider
        uriTemplate: "/files/{identifier}"
        openapiContext:
          tags: ["Blob"]
          summary: "Get the fileshare of a specific bucket with a specific prefix and a specific id"
          parameters:
            - name: bucketIdentifier
              in: query
              description: 'Config identifier of bucket.'
              type: string
              required: true
              example: "test-bucket"
            - name: creationTime
              in: query
              description: 'Current time in ATOM'
              type: string
              required: true
              example: "2024-09-25T12:51:01+00:00"
            - name: includeData
              in: query
              description: 'If the returned contentUrl is a http link or the base64 encoded data'
              type: string
              required: false
              example: "1"
            - name: method
              in: query
              description: 'Method that gets executed'
              type: string
              required: true
              example: "GET"
            - name: sig
              in: query
              description: 'Signature containing the checksum required for the check'
              type: string
              required: true
              example: ""

      ApiPlatform\Metadata\Delete:
        security: 'is_granted("IS_AUTHENTICATED_FULLY")'
        provider: Dbp\Relay\BlobBundle\State\FileDataProvider
        processor: Dbp\Relay\BlobBundle\State\FileDataProcessor
        uriTemplate: "/files/{identifier}"
        denormalizationContext:
          groups: ["BlobFiles:exists"]
        openapiContext:
          tags: ["Blob"]
          summary: "Delete a fileshare of a specific bucket with a specific prefix and a specific id"
          parameters:
            - name: bucketIdentifier
              in: query
              description: 'Config identifier of bucket'
              type: string
              required: true
              example: "test-bucket"
            - name: creationTime
              in: query
              description: 'Current times as ATOM'
              type: string
              required: true
              example: "2024-09-25T12:51:01+00:00"
            - name: method
              in: query
              description: 'Method that gets executed'
              type: string
              required: true
              example: "DELETE"
            - name: sig
              in: query
              description: 'Signature containing the checksum required for the check'
              type: string
              required: true
              example: ""

      ApiPlatform\Metadata\Patch:
        security: 'is_granted("IS_AUTHENTICATED_FULLY")'
        provider: Dbp\Relay\BlobBundle\State\FileDataProvider
        processor: Dbp\Relay\BlobBundle\State\FileDataProcessor
        uriTemplate: "/files/{identifier}"
        inputFormats:
          json: ['application/merge-patch+json']
          multipart: ['multipart/form-data']
        denormalizationContext:
          groups: ["BlobFiles:update"]
        deserialize: false

        openapiContext:
          tags: ["Blob"]
          parameters:
            - name: bucketIdentifier
              in: query
              description: 'Config identifier of bucket.'
              type: string
              required: true
              example: "test-bucket"
            - name: creationTime
              in: query
              description: 'Current time as ATOM'
              type: string
              required: true
              example: "2024-09-25T12:51:01+00:00"
            - name: method
              in: query
              description: 'Method that gets executed'
              type: string
              required: true
              example: "PATCH"
            - name: notifyEmail
              in: query
              description: 'An email address which gets notified before the files expires'
              type: string
              required: false
              example: ""
            - name: prefix
              in: query
              description: 'Prefix of a file collection'
              type: string
              required: false
              example: "my-prefix/my-subprefix"
            - name: type
              in: query
              description: 'Type of the added metadata'
              type: string
              required: false
              example: "generic_id_card"
            - name: sig
              in: query
              description: 'Signature containing the checksum required for the check'
              type: string
              required: true
              example: ""
          requestBody:
            content:
              multipart/form-data:
                schema:
                  type: "object"
                  properties:
                    file:
                      type: "string"
                      format: "binary"
                    fileName:
                      description: "Friendly name of the file"
                      type: "string"
                      example: "myfile.txt"
                    fileHash:
                      description: "Sha256 hash of the file. If one is provided, then it has to match the actual sha256 hash of the uploaded file!"
                      type: "string"
                      example: "0938744de39e1afc2d6bca532b937848918c9b4db41689576930d636bd73d275"
                    metadata:
                      description: "Metadata for the file"
                      type: "string"
                      example: "{\"key\":\"value\"}"
                    metadataHash:
                      description: "Sha256 hash of the metadata. If one is provided, then it has to match the actual sha256 hash of the uploaded metadata!"
                      type: "string"
                      example: "0938744de39e1afc2d6bca532b937848918c9b4db41689576930d636bd73d275"

      ApiPlatform\Metadata\Post:
        security: 'is_granted("IS_AUTHENTICATED_FULLY")'
        controller: Dbp\Relay\BlobBundle\Controller\CreateFileDataAction
        uriTemplate: "/files"
        deserialize: false
        inputFormats:
          multipart: "multipart/form-data"
        openapiContext:
          tags: ["Blob"]
          parameters:
            - name: bucketIdentifier
              in: query
              description: 'Config identifier of bucket.'
              type: string
              required: true
              example: "test-bucket"
            - name: creationTime
              in: query
              description: 'Current time as ATOM'
              type: string
              required: true
              example: "2024-09-25T12:51:01+00:00"
            - name: method
              in: query
              description: 'Method that gets executed'
              type: string
              required: true
              example: "POST"
            - name: notifyEmail
              in: query
              description: 'An email address which gets notified before the files expires'
              type: string
              required: false
              example: ""
            - name: retentionDuration
              in: query
              description: 'Max time in timestamp duration in ATOM format from creation date when file will be deleted'
              type: string
              required: false
              example: "P1D"
            - name: type
              in: query
              description: 'Type of the added metadata'
              type: string
              required: false
              example: "generic_id_card"
            - name: prefix
              in: query
              description: 'Prefix of a file collection'
              type: string
              required: true
              example: "my-prefix/my-subprefix"
            - name: sig
              in: query
              description: 'Signature containing the checksum required for the check'
              type: string
              required: true
              example: ""
          requestBody:
            content:
              multipart/form-data:
                schema:
                  type: "object"
                  required: ["file", "fileName", "metadata"]
                  properties:
                    file:
                      type: "string"
                      format: "binary"
                    fileName:
                      description: "Friendly name of the file"
                      type: "string"
                      example: "myfile.txt"
                    fileHash:
                      description: "Sha256 hash of the file. If one is provided, then it has to match the actual sha256 hash of the uploaded file!"
                      type: "string"
                      example: "0938744de39e1afc2d6bca532b937848918c9b4db41689576930d636bd73d275"
                    metadata:
                      description: "Metadata for the file"
                      type: "string"
                      example: "{\"key\":\"value\"}"
                    metadataHash:
                      description: "Sha256 hash of the metadata. If one is provided, then it has to match the actual sha256 hash of the uploaded metadata!"
                      type: "string"
                      example: "0938744de39e1afc2d6bca532b937848918c9b4db41689576930d636bd73d275"

      download:
        security: 'is_granted("IS_AUTHENTICATED_FULLY")'
        class: ApiPlatform\Metadata\Get
        method: GET
        controller: Dbp\Relay\BlobBundle\Controller\DownloadAction
        uriTemplate: "/files/{identifier}/download"
        normalizationContext:
          groups: ["BlobFiles:output"]
          jsonld_embed_context: true
        read: false
        openapiContext:
          tags: ["Blob"]
          summary: "Returns the file with given identifier as a binary response"
          parameters:
            - name: bucketIdentifier
              in: query
              description: 'Config identifier of bucket.'
              type: string
              required: true
              example: "test-bucket"
            - name: creationTime
              in: query
              description: 'Current time as ATOM'
              type: string
              required: true
              example: "2024-09-26T07:36:01+00:00"
            - name: method
              in: query
              description: 'Method that gets executed'
              type: string
              required: true
              example: "GET"
            - name: sig
              in: query
              description: 'Signature containing the checksum required for the check'
              type: string
              required: true
              example: ""

    properties:
      identifier:
        identifier: true
        iri: "http://schema.org/identifier"
      prefix:
        iri: "https://schema.org/Text"
      fileName:
        iri: "https://schema.org/name"
      bucketIdentifier:
        iri: "https://schema.org/identifier"
      dateCreated:
        iri: "https://schema.org/dateCreated"
      lastAccess:
        iri: "https://schema.org/dateRead"
      retentionDuration:
        iri: "https://schema.org/duration"
      deleteAt:
        iri: "https://schema.org/expires"
      contentUrl:
        iri: "https://schema.org/url"
      additionalMetadata:
        iri: "https://schema.org/DataFeed"
      fileSize:
        iri: "https://schema.org/contentSize"
      notifyEmail:
        iri: "https://schema.org/email"